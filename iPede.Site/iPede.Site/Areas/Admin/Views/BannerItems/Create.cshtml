@model iPede.Site.Models.Entities.BannerItem

@{
    ViewBag.Title = "Criar";
}

<h2>Criar</h2>


@using (Html.BeginForm("Create", "BannerItems", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Item do banner</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                @if (Model != null && Model.ImageUrl != null)
                {
                    <img src="@Url.Content(Model.ImageUrl)" width="300" height=" 150" alt="Imagem" />
                }
                <input type="file" name="ImageFile" />
                @Html.HiddenFor(model => model.ImageUrl)
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VerticalPosition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.VerticalPosition, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VerticalPosition, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LinkUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LinkUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LinkUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LinkUrlType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.LinkUrlType, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LinkUrlType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Criar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar à lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        var localPrefix = '@ViewBag.LocalPrefix';
        function linkUrl_change() {
            var text = $(this).val();
            if (text.indexOf(localPrefix) == 0) {
                $("#LinkUrlType").val('0');
            }
            else {
                $("#LinkUrlType").val('1');
            }
        }
        $(function () {
            $("#LinkUrl").keyup(linkUrl_change);
            $("#LinkUrl").change(linkUrl_change);
        });
    </script>
}
