@model iPede.Site.Models.ProductViewModel

@{
    ViewBag.Title = "Editar";
}
@section styles{
    @Styles.Render("~/Content/file-upload")
}
<h2>Editar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.Hidden("SessionKey")
    <div class="form-horizontal">
        <h4>Produto</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductId)

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, "Categoria", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryID", null, "Selecione", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <span class="btn btn-success fileinput-button">
            <i class="glyphicon glyphicon-plus"></i>
            <span>Adicionar fotos...</span>
            <!-- The file input field used as target for the file upload widget -->
            <input id="fileupload" type="file" name="files" multiple>
        </span>
        <br>
        <br>
        <!-- The global progress bar -->
        <div id="progress" class="progress">
            <div class="progress-bar progress-bar-success"></div>
        </div>
        <!-- The container for the uploaded files -->
        <div id="files" class="files">@Html.Partial("ImagesUpload", Model.Images)</div>
        <br>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar à lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/file-upload")
    <script>
        $(function () {
            'use strict';
            // Change this to the location of your server-side upload handler:
            var url = '@Url.Action("ImagesUpload")';
            $('#fileupload').fileupload({
                url: url,
                singleFileUploads: false,
                done: function (e, data) {
                    $("#files").html(data.result);
                },
                progressall: function (e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    $('#progress .progress-bar').css(
                        'width',
                        progress + '%'
                    );
                }
            }).prop('disabled', !$.support.fileInput)
                .parent().addClass($.support.fileInput ? undefined : 'disabled');
        });

        function imageClick(buttonId) {
            var buttonId = "#" + buttonId;
            $(buttonId).click()
            .focus();
        }
        function deleteImage(index) {
            var defaultImageIndex = $("input[type='radio'][name='defaultImageIndex']:checked").val();
            $.ajax({
                cache: false,
                url: '@Url.Action("DeleteImage")',
                data: { index: index, sessionKey: '@ViewBag.sessionKey', defaultImageIndex: defaultImageIndex, deleteFromDisk: false },
                success: function (data) {
                    $("#files").html(data);
                }
            })
        }
    </script>
}
