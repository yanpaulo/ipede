<Page
    x:Class="iPede.WindowsApp.ProductPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:iPede.WindowsApp"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="using:iPede.WindowsApp.Converters"
    mc:Ignorable="d">
    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition />
        </TransitionCollection>
    </Page.Transitions>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.Resources>
            <converters:PriceValueConverter x:Key="PriceValueConverter"></converters:PriceValueConverter>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <TextBlock Padding="10" Text="{Binding Name, FallbackValue='iPede'}" Foreground="{ThemeResource SystemControlForegroundAccentBrush}" Style="{ThemeResource HeaderTextBlockStyle}"></TextBlock>

        <!--ScrollViewer for small screens. Disabled for big screens-->
        <ScrollViewer  x:Name="MainScrollViewer" Grid.Row="1"
                      VerticalScrollMode="Disabled"
                      VerticalScrollBarVisibility="Hidden"
                      >
            <ScrollViewer.Background>
                <ImageBrush ImageSource="{Binding MainImageUrl}" Opacity="0.1"></ImageBrush>
            </ScrollViewer.Background>
            <RelativePanel>

                <Border x:Name="ImageBorder" Margin="8" Padding="4" Width="400" BorderBrush="{ThemeResource SystemControlBackgroundBaseLowBrush}" BorderThickness="2"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignTopWithPanel="True"
                            RelativePanel.AlignBottomWithPanel="True">
                    <Image Source="{Binding MainImageUrl}" VerticalAlignment="Top"></Image>
                </Border>
                <ScrollViewer x:Name="SubScrollViewer"
                    RelativePanel.RightOf="ImageBorder"
                    RelativePanel.AlignRightWithPanel="True"
                    RelativePanel.AlignTopWithPanel="True"
                    RelativePanel.AlignBottomWithPanel="True">
                    <StackPanel Padding="10">
                        <TextBlock Text="{Binding Name}" Style="{ThemeResource TitleTextBlockStyle}"></TextBlock>
                        <TextBlock Text="{Binding ShortDescription}" Style="{ThemeResource CaptionTextBlockStyle}"></TextBlock>
                        <TextBlock Text="{Binding Price, Converter={StaticResource PriceValueConverter}}" Style="{ThemeResource SubheaderTextBlockStyle}"></TextBlock>
                        <TextBlock Text="{Binding FullDescription}" Style="{ThemeResource BodyTextBlockStyle}"></TextBlock>
                        <Button x:Name="AddToCartButton" Content="Incluir" FontWeight="Bold" Padding="12,4"  Background="{ThemeResource SystemControlForegroundAccentBrush}" Click="AddToCartButton_Click">
                        </Button>
                    </StackPanel>
                </ScrollViewer>
            </RelativePanel>
        </ScrollViewer>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowSizeStates">
                <!-- First set of VisualStates are simple responsive states based on window size. AdaptiveTrigger is a built-in trigger that XAML knows to automatically trigger based on window size -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <!-- Trigger below indicates that this VisualState is to be applied when the current window width is >= 720 effective pixels -->
                        <AdaptiveTrigger MinWindowWidth="640" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <!-- Trigger below indicates that this VisualState is to be applied when current window width is >=0 and <720 effective pixels -->
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- Simplified Setter statements are used to move elements around to optimize for lesser available space -->
                        <Setter Target="ImageBorder.(RelativePanel.AlignBottomWithPanel)" Value="False" />
                        <Setter Target="ImageBorder.(RelativePanel.AlignRightWithPanel)" Value="True" />
                        <Setter Target="ImageBorder.(RelativePanel.AlignRightWithPanel)" Value="True" />


                        <Setter Target="SubScrollViewer.(RelativePanel.AlignTopWithPanel)" Value="False" />
                        <Setter Target="SubScrollViewer.(RelativePanel.AlignLeftWithPanel)" Value="True" />
                        <Setter Target="SubScrollViewer.(RelativePanel.RightOf)" Value="" />
                        <Setter Target="SubScrollViewer.(RelativePanel.Below)" Value="ImageBorder" />
                        <Setter Target="SubScrollViewer.VerticalScrollMode" Value="Disabled" />
                        <Setter Target="SubScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />

                        <Setter Target="MainScrollViewer.VerticalScrollMode" Value="Enabled" />
                        <Setter Target="MainScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
                        <!--<ScrollViewer  x:Name="MainScrollViewer" Grid.Row="1"
                      HorizontalScrollMode="Disabled"
                      VerticalScrollMode="Disabled"
                      HorizontalScrollBarVisibility="Hidden"
                      VerticalScrollBarVisibility="Hidden"-->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
